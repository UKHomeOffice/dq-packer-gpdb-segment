---
- name: Pre-reqs for ansible to run
  hosts: all
  gather_facts: false
  become: yes
  pre_tasks:
    - raw: test -e /usr/bin/python || ( yum -y update && yum install -y python-minimal )

- name: Build GPDB segment node.
  hosts: all
  become: true
  tasks:
  - name: Yum Install Pre Dependencies
    yum: name={{ item }}
    with_items:
      - zip
      - ed
      - unzip
      - xfsdump
      - autoconf
      - popt-devel
      - zlib-devel
      - libaio-devel
      - cryptsetup
      - iperf3
      - fio
      - cloud-utils
      - wget
      - gcc

  - name: PIP
    shell: curl https://bootstrap.pypa.io/get-pip.py | python
    args:
      creates: /bin/pip

  - name: AWS cli
    shell: pip install awscli
    args:
      creates: /bin/aws

  - name: Update all libraries
    yum: name=* state=latest

  - name: Gpadmin group
    group:
      name: gpadmin
      system: yes

  - name: Create gpadmin user
    user:
      name: gpadmin
      group: gpadmin

  - name: Create SSH folder
    file:
      path: /home/gpadmin/.ssh
      state: directory
      owner: gpadmin
      group: gpadmin
      mode: 0700

  - name: Create authorized_keys file
    file:
      path: /home/gpadmin/.ssh/authorized_keys
      state: touch
      owner: gpadmin
      group: gpadmin
      mode: 0644

  - name: Create script folder
    file:
      path: /home/gpadmin/GP_Shell_Scripts
      state: directory
      mode: 0755
      recurse: yes
      owner: gpadmin
      group: gpadmin

  - name: Create script log folder
    file:
      path: /home/gpadmin/GP_Shell_Scripts/log
      state: directory
      mode: 0755
      recurse: yes
      owner: gpadmin
      group: gpadmin

  - name: Create mount folder
    file:
      path: /gpdb
      state: directory
      owner: gpadmin
      group: gpadmin
      mode: 0755

  - name: Create GPDB directory structure
    file:
      path: /gpdb/{{ item }}
      state: directory
      mode: 0755
      recurse: yes
      owner: gpadmin
      group: gpadmin
    with_items:
      - data1/primary
      - data2/primary
      - data3/primary
      - data4/primary
      - data5/primary
      - data6/primary
      - data7/primary
      - data8/primary
      - data1/mirror
      - data2/mirror
      - data3/mirror
      - data4/mirror
      - data5/mirror
      - data6/mirror
      - data7/mirror
      - data8/mirror
      - master/backups_NRT/db_dumps

  - name: Turn off SELinux
    selinux:
      state: disabled

  - name: Set scheduler deadline
    command: grubby --update-kernel=ALL --args="elevator=deadline"

  - name: Disable tranparent huge pages
    command: grubby --update-kernel=ALL --args="transparent_hugepage=never"

  - name: Insert Greenplum config to /etc/sysctl.conf
    blockinfile:
      path: /etc/sysctl.conf
      backup: yes
      block: |
        # GPDB Settings
        kernel.shmmax = 500000000
        kernel.shmmni = 4096
        kernel.shmall = 4000000000
        kernel.sem = 250 512000 100 2048
        kernel.sysrq = 1
        kernel.core_uses_pid = 1
        kernel.msgmnb = 65536
        kernel.msgmax = 65536
        kernel.msgmni = 2048
        net.ipv4.tcp_syncookies = 1
        net.ipv4.ip_forward = 0
        net.ipv4.conf.default.accept_source_route = 0
        net.ipv4.tcp_tw_recycle = 1
        net.ipv4.tcp_max_syn_backlog = 4096
        net.ipv4.conf.all.arp_filter = 1
        net.ipv4.ip_local_port_range = 1025 65535
        net.core.netdev_max_backlog = 10000
        net.core.rmem_max = 2097152
        net.core.wmem_max = 2097152
        vm.overcommit_memory = 2

  - name: Insert default Greenplum config to /etc/security/limits.conf
    blockinfile:
      path: /etc/security/limits.conf
      backup: yes
      block: |
        # GPDB Settings
        * soft nofile 65536
        * hard nofile 65536
        * soft nproc 131072
        * hard nproc 131072

  - name: Insert default Greenplum config to /etc/security/limits.d/20-nproc.conf
    blockinfile:
      path: /etc/security/limits.d/20-nproc.conf
      backup: yes
      block: |
        # GPDB Settings
        * soft nofile 65536
        * hard nofile 65536
        * soft nproc 131072
        * hard nproc 131072

  - name: Add mappings to /etc/hosts
    blockinfile:
      path: /etc/hosts
      block: |
        {{ item.ip }} {{ item.name }} {{ item.nic }} {{ item.dnsname }} {{ item.dnsshort }}
      marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.ip }}"
    with_items:
      - { ip: 10.1.30.101, name: mdw, nic: mdw-1, dnsname: ip-10-1-30-101.eu-west-2.compute.internal, dnsshort: ip-10-1-30-101 }
      - { ip: 10.1.31.101, name: mdw, nic: mdw-2, dnsname: ip-10-1-31-101.eu-west-2.compute.internal, dnsshort: ip-10-1-31-101 }
      - { ip: 10.1.32.105, name: mdw, nic: mdw-3, dnsname: ip-10-1-32-105.eu-west-2.compute.internal, dnsshort: ip-10-1-32-105 }
      - { ip: 10.1.33.229, name: mdw, nic: mdw-4, dnsname: ip-10-1-33-229.eu-west-2.compute.internal, dnsshort: ip-10-1-33-229 }
      - { ip: 10.1.30.4, name: smdw, nic: smdw-1, dnsname: ip-10-1-30-4.eu-west-2.compute.internal, dnsshort: ip-10-1-30-4 }
      - { ip: 10.1.31.234, name: smdw, nic: smdw-2, dnsname: ip-10-1-31-234.eu-west-2.compute.internal, dnsshort: ip-10-1-31-234 }
      - { ip: 10.1.32.183, name: smdw, nic: smdw-3, dnsname: ip-10-1-32-183.eu-west-2.compute.internal, dnsshort: ip-10-1-32-183 }
      - { ip: 10.1.33.86, name: smdw, nic: smdw-4, dnsname: ip-10-1-33-86.eu-west-2.compute.internal, dnsshort: ip-10-1-33-86 }
      - { ip: 10.1.30.224, name: sdw1, nic: sdw1-1, dnsname: ip-10-1-30-224.eu-west-2.compute.internal, dnsshort: ip-10-1-30-224 }
      - { ip: 10.1.31.66, name: sdw1, nic: sdw1-2, dnsname: ip-10-1-31-66.eu-west-2.compute.internal, dnsshort: ip-10-1-31-66 }
      - { ip: 10.1.32.150, name: sdw1, nic: sdw1-3, dnsname: ip-10-1-32-150.eu-west-2.compute.internal, dnsshort: ip-10-1-32-150 }
      - { ip: 10.1.33.179, name: sdw1, nic: sdw1-4, dnsname: ip-10-1-33-179.eu-west-2.compute.internal, dnsshort: ip-10-1-33-179 }
      - { ip: 10.1.30.9, name: sdw2, nic: sdw2-1, dnsname: ip-10-1-30-9.eu-west-2.compute.internal, dnsshort: ip-10-1-30-9 }
      - { ip: 10.1.31.159, name: sdw2, nic: sdw2-2, dnsname: ip-10-1-31-159.eu-west-2.compute.internal, dnsshort: ip-10-1-31-159 }
      - { ip: 10.1.32.164, name: sdw2, nic: sdw2-3, dnsname: ip-10-1-32-164.eu-west-2.compute.internal, dnsshort: ip-10-1-32-164 }
      - { ip: 10.1.33.14, name: sdw2, nic: sdw2-4, dnsname: ip-10-1-33-14.eu-west-2.compute.internal, dnsshort: ip-10-1-33-14 }
      - { ip: 10.1.30.143, name: sdw3, nic: sdw3-1, dnsname: ip-10-1-30-143.eu-west-2.compute.internal, dnsshort: ip-10-1-30-143 }
      - { ip: 10.1.31.168, name: sdw3, nic: sdw3-2, dnsname: ip-10-1-31-168.eu-west-2.compute.internal, dnsshort: ip-10-1-31-168 }
      - { ip: 10.1.32.221, name: sdw3, nic: sdw3-3, dnsname: ip-10-1-32-221.eu-west-2.compute.internal, dnsshort: ip-10-1-32-221 }
      - { ip: 10.1.33.246, name: sdw3, nic: sdw3-4, dnsname: ip-10-1-33-246.eu-west-2.compute.internal, dnsshort: ip-10-1-33-246 }
      - { ip: 10.1.30.10, name: sdw4, nic: sdw4-1, dnsname: ip-10-1-30-10.eu-west-2.compute.internal, dnsshort: ip-10-1-30-10 }
      - { ip: 10.1.31.11, name: sdw4, nic: sdw4-2, dnsname: ip-10-1-31-11.eu-west-2.compute.internal, dnsshort: ip-10-1-31-11 }
      - { ip: 10.1.32.12, name: sdw4, nic: sdw4-3, dnsname: ip-10-1-32-12.eu-west-2.compute.internal, dnsshort: ip-10-1-32-12 }
      - { ip: 10.1.33.13, name: sdw4, nic: sdw4-4, dnsname: ip-10-1-33-13.eu-west-2.compute.internal, dnsshort: ip-10-1-33-13 }
      - { ip: 10.1.30.20, name: sdw5, nic: sdw5-1, dnsname: ip-10-1-30-20.eu-west-2.compute.internal, dnsshort: ip-10-1-30-20 }
      - { ip: 10.1.31.21, name: sdw5, nic: sdw5-2, dnsname: ip-10-1-31-21.eu-west-2.compute.internal, dnsshort: ip-10-1-31-21 }
      - { ip: 10.1.32.22, name: sdw5, nic: sdw5-3, dnsname: ip-10-1-32-22.eu-west-2.compute.internal, dnsshort: ip-10-1-32-22 }
      - { ip: 10.1.33.23, name: sdw5, nic: sdw5-4, dnsname: ip-10-1-33-23.eu-west-2.compute.internal, dnsshort: ip-10-1-33-23 }
      - { ip: 10.1.30.30, name: sdw6, nic: sdw6-1, dnsname: ip-10-1-30-30.eu-west-2.compute.internal, dnsshort: ip-10-1-30-30 }
      - { ip: 10.1.31.31, name: sdw6, nic: sdw6-2, dnsname: ip-10-1-31-31.eu-west-2.compute.internal, dnsshort: ip-10-1-31-31 }
      - { ip: 10.1.32.32, name: sdw6, nic: sdw6-3, dnsname: ip-10-1-32-32.eu-west-2.compute.internal, dnsshort: ip-10-1-32-32 }
      - { ip: 10.1.33.33, name: sdw6, nic: sdw6-4, dnsname: ip-10-1-33-33.eu-west-2.compute.internal, dnsshort: ip-10-1-33-33 }
      - { ip: 10.1.6.100, name: DATA-INGEST1, nic: data-ingest1, dnsname: ip-10-1-6-100.eu-west-2.compute.internal, dnsshort: ip-10-1-6-100 }
      - { ip: 10.1.8.100, name: DATA-PIPELINE1, nic: data-pipeline1, dnsname: ip-10-1-8-100.eu-west-2.compute.internal, dnsshort: ip-10-1-8-100 }

  - name: Download cloudwatch logs agent
    get_url:
      url: https://s3.amazonaws.com//aws-cloudwatch/downloads/latest/awslogs-agent-setup.py
      dest: /tmp/awslogs-agent-setup.py
      mode: "+x"

  - name: Cloudwatch logs config
    copy:
      dest: /tmp/cwlogs.conf
      content: |
        [general]
        state_file = /var/awslogs/state/agent-state
        [/var/log/messages]
        file = /var/log/messages
        log_group_name = /GPDB/system
        log_stream_name = {hostname}
        datetime_format = %b %d %H:%M:%S
        [/GPDB/cloud-init]
        file = /var/log/cloud-init.log
        log_group_name = /GPDB/cloud-init
        log_stream_name = {hostname}
        datetime_format = %Y-%m-%d %H:%M:%S,%f
        [/GPDB/awslogs]
        file = /var/log/awslogs.log
        log_group_name = /GPDB/awslogs.log
        log_stream_name = {hostname}
        datetime_format = %Y-%m-%d %H:%M:%S,%f
        [/GPDB/secure]
        file = /var/log/secure
        log_group_name = /GPDB/secure
        log_stream_name = {hostname}
        datetime_format = %Y-%m-%d %H:%M:%S,%f
        [/GPDB/cron]
        file = /var/log/cron
        log_group_name = /GPDB/cron
        log_stream_name = {hostname}
        datetime_format = %Y-%m-%d %H:%M:%S,%f
        [/GPDB/S3_upload]
        file = /home/gpadmin/GP_Shell_Scripts/log/S3_*
        log_group_name = /GPDB/S3_upload
        log_stream_name = {hostname}
        datetime_format = %Y-%m-%d %H:%M:%S,%f

  - name: Install cloudwatch log agent
    environment:
      LC_ALL: C
    shell: /tmp/awslogs-agent-setup.py --region eu-west-2 --non-interactive -c /tmp/cwlogs.conf
    args:
      creates: /var/awslogs/etc/aws.conf

  - name: Copy cloudwatch logs starter
    copy:
      src: startcloudwatchlogs.sh
      dest: /usr/bin/startcloudwatchlogs.sh
      owner: root
      group: root
      mode: 0755

  - name: Make Cron Job to start awslogs with right region
    cron:
      name: Start awslogs
      special_time: reboot
      job: /usr/bin/startcloudwatchlogs.sh

  - name: Bootstrap
    copy:
      src: bootstrap-swap.sh
      dest: /usr/bin/bootstrap-swap.sh
      owner: root
      group: root
      mode: 0755

  - name: Make Cron Job to start bootstrap-swap at boot
    cron:
      name: Start bootstrap
      special_time: reboot
      job: /usr/bin/bootstrap-swap.sh > /var/log/swap_setup_$(date +\%Y\%m\%d_\%H:\%M).log 2>&1
      state: present

  - name: Copy S3 backup script
    copy:
      src: s3_upload.sh
      dest: /home/gpadmin/GP_Shell_Scripts/s3_upload.sh
      owner: gpadmin
      group: gpadmin
      mode: 0755

  - name: Make Cron Job to run S3 transfer at 2AM
    cron:
      name: Start S3 transfer
      minute: 0
      hour: 2
      user: gpadmin
      job: sh -c ". /home/gpadmin/GP_Shell_Scripts/script_envs.sh && /home/gpadmin/GP_Shell_Scripts/s3_upload.sh > /home/gpadmin/GP_Shell_Scripts/log/S3_upload.log_$(date +\%Y\%m\%d_\%H:\%M) 2>&1"
      state: present

  - name: Copy Ephemeral storage folder structure setup script
    copy:
      src: ephemeral_folders.sh
      dest: /usr/bin/ephemeral_folders.sh
      owner: root
      group: root
      mode: 0755

  - name: Make Cron Job to start ephemeral folder setup at boot with 120sec delay
    cron:
      name: Start ephemeral folder setup
      special_time: reboot
      job: sleep 120 && /usr/bin/ephemeral_folders.sh > /var/log/ephemeral_folders_$(date +\%Y\%m\%d_\%H:\%M).log 2>&1
      state: present
